//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GiftR.Model", "FK_Sites_SitesTypes", "SitesTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GiftR.Model.SitesTypes), "Sites", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftR.Model.Sites), true)]
[assembly: EdmRelationshipAttribute("GiftR.Model", "FK_SitesOwners_Sites", "Sites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GiftR.Model.Sites), "SitesOwners", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftR.Model.SitesOwners), true)]
[assembly: EdmRelationshipAttribute("GiftR.Model", "FK_SitesOwners_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GiftR.Model.Users), "SitesOwners", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftR.Model.SitesOwners), true)]

#endregion

namespace GiftR.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GiftRModel : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GiftRModel object using the connection string found in the 'GiftRModel' section of the application configuration file.
        /// </summary>
        public GiftRModel() : base("name=GiftRModel", "GiftRModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GiftRModel object.
        /// </summary>
        public GiftRModel(string connectionString) : base(connectionString, "GiftRModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GiftRModel object.
        /// </summary>
        public GiftRModel(EntityConnection connection) : base(connection, "GiftRModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sites> Sites
        {
            get
            {
                if ((_Sites == null))
                {
                    _Sites = base.CreateObjectSet<Sites>("Sites");
                }
                return _Sites;
            }
        }
        private ObjectSet<Sites> _Sites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SitesOwners> SitesOwners
        {
            get
            {
                if ((_SitesOwners == null))
                {
                    _SitesOwners = base.CreateObjectSet<SitesOwners>("SitesOwners");
                }
                return _SitesOwners;
            }
        }
        private ObjectSet<SitesOwners> _SitesOwners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SitesTypes> SitesTypes
        {
            get
            {
                if ((_SitesTypes == null))
                {
                    _SitesTypes = base.CreateObjectSet<SitesTypes>("SitesTypes");
                }
                return _SitesTypes;
            }
        }
        private ObjectSet<SitesTypes> _SitesTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSites(Sites sites)
        {
            base.AddObject("Sites", sites);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SitesOwners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSitesOwners(SitesOwners sitesOwners)
        {
            base.AddObject("SitesOwners", sitesOwners);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SitesTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSitesTypes(SitesTypes sitesTypes)
        {
            base.AddObject("SitesTypes", sitesTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftR.Model", Name="Sites")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sites : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sites object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="title">Initial value of the title property.</param>
        /// <param name="verificacion_code">Initial value of the verificacion_code property.</param>
        /// <param name="site_type">Initial value of the site_type property.</param>
        /// <param name="flickr_username">Initial value of the flickr_username property.</param>
        public static Sites CreateSites(global::System.Int32 id, global::System.String title, global::System.String verificacion_code, global::System.Int32 site_type, global::System.String flickr_username)
        {
            Sites sites = new Sites();
            sites.id = id;
            sites.title = title;
            sites.verificacion_code = verificacion_code;
            sites.site_type = site_type;
            sites.flickr_username = flickr_username;
            return sites;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String verificacion_code
        {
            get
            {
                return _verificacion_code;
            }
            set
            {
                Onverificacion_codeChanging(value);
                ReportPropertyChanging("verificacion_code");
                _verificacion_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("verificacion_code");
                Onverificacion_codeChanged();
            }
        }
        private global::System.String _verificacion_code;
        partial void Onverificacion_codeChanging(global::System.String value);
        partial void Onverificacion_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 site_type
        {
            get
            {
                return _site_type;
            }
            set
            {
                Onsite_typeChanging(value);
                ReportPropertyChanging("site_type");
                _site_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("site_type");
                Onsite_typeChanged();
            }
        }
        private global::System.Int32 _site_type;
        partial void Onsite_typeChanging(global::System.Int32 value);
        partial void Onsite_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String flickr_username
        {
            get
            {
                return _flickr_username;
            }
            set
            {
                Onflickr_usernameChanging(value);
                ReportPropertyChanging("flickr_username");
                _flickr_username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("flickr_username");
                Onflickr_usernameChanged();
            }
        }
        private global::System.String _flickr_username;
        partial void Onflickr_usernameChanging(global::System.String value);
        partial void Onflickr_usernameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftR.Model", "FK_Sites_SitesTypes", "SitesTypes")]
        public SitesTypes SitesTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SitesTypes>("GiftR.Model.FK_Sites_SitesTypes", "SitesTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SitesTypes>("GiftR.Model.FK_Sites_SitesTypes", "SitesTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SitesTypes> SitesTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SitesTypes>("GiftR.Model.FK_Sites_SitesTypes", "SitesTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SitesTypes>("GiftR.Model.FK_Sites_SitesTypes", "SitesTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftR.Model", "FK_SitesOwners_Sites", "SitesOwners")]
        public EntityCollection<SitesOwners> SitesOwners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SitesOwners>("GiftR.Model.FK_SitesOwners_Sites", "SitesOwners");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SitesOwners>("GiftR.Model.FK_SitesOwners_Sites", "SitesOwners", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftR.Model", Name="SitesOwners")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SitesOwners : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SitesOwners object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="site_id">Initial value of the site_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        public static SitesOwners CreateSitesOwners(global::System.Int32 id, global::System.Int32 site_id, global::System.Int32 user_id)
        {
            SitesOwners sitesOwners = new SitesOwners();
            sitesOwners.id = id;
            sitesOwners.site_id = site_id;
            sitesOwners.user_id = user_id;
            return sitesOwners;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 site_id
        {
            get
            {
                return _site_id;
            }
            set
            {
                Onsite_idChanging(value);
                ReportPropertyChanging("site_id");
                _site_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("site_id");
                Onsite_idChanged();
            }
        }
        private global::System.Int32 _site_id;
        partial void Onsite_idChanging(global::System.Int32 value);
        partial void Onsite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftR.Model", "FK_SitesOwners_Sites", "Sites")]
        public Sites Sites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sites>("GiftR.Model.FK_SitesOwners_Sites", "Sites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sites>("GiftR.Model.FK_SitesOwners_Sites", "Sites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sites> SitesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sites>("GiftR.Model.FK_SitesOwners_Sites", "Sites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sites>("GiftR.Model.FK_SitesOwners_Sites", "Sites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftR.Model", "FK_SitesOwners_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("GiftR.Model.FK_SitesOwners_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("GiftR.Model.FK_SitesOwners_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("GiftR.Model.FK_SitesOwners_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("GiftR.Model.FK_SitesOwners_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftR.Model", Name="SitesTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SitesTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SitesTypes object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="default_page">Initial value of the default_page property.</param>
        public static SitesTypes CreateSitesTypes(global::System.Int32 id, global::System.String name, global::System.String default_page)
        {
            SitesTypes sitesTypes = new SitesTypes();
            sitesTypes.id = id;
            sitesTypes.name = name;
            sitesTypes.default_page = default_page;
            return sitesTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String default_page
        {
            get
            {
                return _default_page;
            }
            set
            {
                Ondefault_pageChanging(value);
                ReportPropertyChanging("default_page");
                _default_page = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("default_page");
                Ondefault_pageChanged();
            }
        }
        private global::System.String _default_page;
        partial void Ondefault_pageChanging(global::System.String value);
        partial void Ondefault_pageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String css
        {
            get
            {
                return _css;
            }
            set
            {
                OncssChanging(value);
                ReportPropertyChanging("css");
                _css = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("css");
                OncssChanged();
            }
        }
        private global::System.String _css;
        partial void OncssChanging(global::System.String value);
        partial void OncssChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftR.Model", "FK_Sites_SitesTypes", "Sites")]
        public EntityCollection<Sites> Sites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sites>("GiftR.Model.FK_Sites_SitesTypes", "Sites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sites>("GiftR.Model.FK_Sites_SitesTypes", "Sites", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftR.Model", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="userid">Initial value of the userid property.</param>
        /// <param name="fullname">Initial value of the fullname property.</param>
        /// <param name="source">Initial value of the source property.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.Int64 userid, global::System.String fullname, global::System.String source)
        {
            Users users = new Users();
            users.id = id;
            users.userid = userid;
            users.fullname = fullname;
            users.source = source;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.Int64 _userid;
        partial void OnuseridChanging(global::System.Int64 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fullname
        {
            get
            {
                return _fullname;
            }
            set
            {
                OnfullnameChanging(value);
                ReportPropertyChanging("fullname");
                _fullname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("fullname");
                OnfullnameChanged();
            }
        }
        private global::System.String _fullname;
        partial void OnfullnameChanging(global::System.String value);
        partial void OnfullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String firstname
        {
            get
            {
                return _firstname;
            }
            set
            {
                OnfirstnameChanging(value);
                ReportPropertyChanging("firstname");
                _firstname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("firstname");
                OnfirstnameChanged();
            }
        }
        private global::System.String _firstname;
        partial void OnfirstnameChanging(global::System.String value);
        partial void OnfirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lastname
        {
            get
            {
                return _lastname;
            }
            set
            {
                OnlastnameChanging(value);
                ReportPropertyChanging("lastname");
                _lastname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lastname");
                OnlastnameChanged();
            }
        }
        private global::System.String _lastname;
        partial void OnlastnameChanging(global::System.String value);
        partial void OnlastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String source
        {
            get
            {
                return _source;
            }
            set
            {
                OnsourceChanging(value);
                ReportPropertyChanging("source");
                _source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("source");
                OnsourceChanged();
            }
        }
        private global::System.String _source;
        partial void OnsourceChanging(global::System.String value);
        partial void OnsourceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftR.Model", "FK_SitesOwners_Users", "SitesOwners")]
        public EntityCollection<SitesOwners> SitesOwners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SitesOwners>("GiftR.Model.FK_SitesOwners_Users", "SitesOwners");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SitesOwners>("GiftR.Model.FK_SitesOwners_Users", "SitesOwners", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
